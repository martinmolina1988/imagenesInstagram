{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","url","setUrl","printRef","React","useRef","console","log","handleDownloadImage","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","element","canvas","data","link","wrap","_context","prev","next","current","html2canvas","useCORS","scale","sent","toDataURL","document","createElement","download","href","body","appendChild","click","removeChild","window","open","stop","apply","this","arguments","react_default","className","htmlFor","type","onChange","e","target","value","ref","style","backgroundImage","concat","position","right","onClick","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","container","getElementById","ReactDOMClient","render","src_App"],"mappings":"mOAoDeA,MAhDf,WAAe,IAAAC,EACSC,mBAAS,IADlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACDI,EADCJ,EAAA,GAKPK,EAAWC,IAAMC,SACvBC,QAAQC,IAAIN,GAEZ,IAAMO,EAAmB,eAAAC,EAAAV,OAAAW,EAAA,EAAAX,CAAAY,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACpBP,EAAUZ,EAASoB,QADCH,EAAAE,KAAA,EAELE,IAAYT,EAAQ,CAACU,SAAS,EAAMC,MAAO,IAFtC,OAEpBV,EAFoBI,EAAAO,KAIpBV,EAAOD,EAAOY,UAAU,aAGD,kBAFvBV,EAAOW,SAASC,cAAc,MAEpBC,UACdb,EAAKc,KAAOf,EACZC,EAAKa,SAAW,YAEhBF,SAASI,KAAKC,YAAYhB,GAC1BA,EAAKiB,QACLN,SAASI,KAAKG,YAAYlB,IAE1BmB,OAAOC,KAAKrB,GAfY,wBAAAG,EAAAmB,SAAAzB,MAAH,yBAAAL,EAAA+B,MAAAC,KAAAC,YAAA,GAkBzB,OACEC,EAAA/B,EAAAkB,cAAA,OAAKc,UAAU,OACbD,EAAA/B,EAAAkB,cAAA,2BACAa,EAAA/B,EAAAkB,cAAA,SAAOe,QAAQ,IAAf,UACAF,EAAA/B,EAAAkB,cAAA,SAAOgB,KAAK,OAAOC,SAAU,SAACC,GAAD,OA5BhB,SAACA,GAChB9C,EAAO8C,EAAEC,OAAOC,OA2BsBH,CAASC,MAC7CL,EAAA/B,EAAAkB,cAAA,WACAa,EAAA/B,EAAAkB,cAAA,WACEa,EAAA/B,EAAAkB,cAAA,OACEqB,IAAKhD,EACLyC,UAAU,oBACVQ,MAAO,CAAEC,gBAAe,OAAAC,OAASrD,EAAT,QAG1B0C,EAAA/B,EAAAkB,cAAA,MAAIsB,MAAO,CAAEG,SAAU,WAAYC,MAAO,IAA1C,SAEFb,EAAA/B,EAAAkB,cAAA,UAAQgB,KAAK,SAASW,QAASjD,GAA/B,uBCjCSkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAb,EAAA,GAAAc,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAArD,GAAiD,IAA9CuD,EAA8CvD,EAA9CuD,OAAQC,EAAsCxD,EAAtCwD,OAAQC,EAA8BzD,EAA9ByD,OAAQC,EAAsB1D,EAAtB0D,OAAQC,EAAc3D,EAAd2D,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCFRU,EAAYxC,SAASyC,eAAe,QAG7BC,aAA0BF,GAGlCG,OAAO7B,EAAA/B,EAAAkB,cAAC2C,EAAD,OAIZf","file":"static/js/main.692d68e3.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport html2canvas from \"html2canvas\";\n\nfunction App() {\n  const [url, setUrl] = useState(\"\");\n  const onChange = (e) => {\n    setUrl(e.target.value);\n  };\n  const printRef = React.useRef();\n  console.log(url);\n\n  const handleDownloadImage = async () => {\n    const element = printRef.current;\n    const canvas = await html2canvas(element,{useCORS: true, scale: 1});\n\n    const data = canvas.toDataURL(\"image/jpg\");\n    const link = document.createElement(\"a\");\n\n    if (typeof link.download === \"string\") {\n      link.href = data;\n      link.download = \"image.jpg\";\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      window.open(data);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <h2>Subir archivo</h2>\n      <label htmlFor=\"\">imagen</label>\n      <input type=\"text\" onChange={(e) => onChange(e)} />\n      <br />\n      <div>\n        <div\n          ref={printRef}\n          className=\"contenedor-imagen\"\n          style={{ backgroundImage: `url(${url})` }}\n        />\n\n        <h2 style={{ position: \"absolute\", right: 0 }}>hola</h2>\n      </div>\n      <button type=\"button\" onClick={handleDownloadImage}>\n        Download as Image\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nconst container = document.getElementById('root');\n\n// Create a root.\nconst root = ReactDOMClient.createRoot(container);\n\n// Initial render: Render an element to the root.\nroot.render(<App/>);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}